#!/usr/bin/env ruby
# encoding: utf-8

$:.unshift File.dirname(__FILE__) + '/../library'
require 'grooveshark'
require 'readline'

Commands = %w{search fetch add play remove list exit quit}
Queue = Grooveshark::Queue.new
Songs = []

bold = "\e[1m"
reset = "\e[0m"

Readline.completion_proc = lambda do |string|
  Commands.grep /^#{Regexp.escape string}/i
end

puts "=> Grooveshark #{Grooveshark::Version.join ?.}"
Grooveshark.client
puts "=> Connection established."

while line = Readline.readline("\n#{bold}♪#{reset} ", true)
  args = line.split

  case args.first
  when 'search'
    Songs.clear

    Grooveshark.search line[7..-1] do |song|
      Songs << song
      puts "#{bold}#{Songs.index song}#{reset} #{song.artist} – #{song.name}"
    end
  when 'fetch'
    if song = Songs[Integer args[1]]
      path = File.join Dir.pwd, "#{song.artist} - #{song.name}.mp3"
      puts "-> #{path} …"
      song.stream.dump File.open path, 'w'
      puts "Done."
    else
      puts "No such song."
    end
  when 'add'
    if song = Songs[Integer args[1]]
      Queue.add song
      puts "The song was added to the queue."
    else
      puts "No such song."
    end

  when 'list'
    Queue.each do |song|
      puts "#{bold}#{Queue.index song}#{reset} #{song.artist} – #{song.name}"
    end

  when 'remove'
    if song = Queue.delete_at(Integer args[1])
      puts "The song was removed from the queue."
    else
      puts "No such song."
    end
    
  when 'play'
    puts "playing …"
  when 'exit', 'quit'
    exit 0
  end
end
